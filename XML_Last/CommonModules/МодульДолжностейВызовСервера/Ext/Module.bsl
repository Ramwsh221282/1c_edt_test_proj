// @strict-types

#Область УдалениеДолжностиUseCase

// Запрос удаления должности.
// 
// Параметры:
//  Id - Строка
// 
// Возвращаемое значение:
//  Структура - Запрос удаления должности:
// 	 * Id - Строка
Функция ЗапросУдаленияДолжности(Id) Экспорт
	Запрос = новый Структура;
	Запрос.Вставить("Id", Id);
	Возврат Запрос;
КонецФункции

// Удалить должность.
// 
// Параметры:
//  Запрос - Структура:
//   * Id - Строка
// 
// Возвращаемое значение:
//  Структура - Ответ удаления должности:
//   * Ссылка - СправочникСсылка.Должности
//  
Функция УдалитьДолжность(Запрос) Экспорт
	Id = Запрос.Id;
	Должность = НайтиДолжностьПоId(Id);
	Должность.ПолучитьОбъект().Удалить();
	Возврат СоздатьОтветУдаления(Должность);
КонецФункции

// Создать ответ удаления.
// 
// Параметры:
//  Должность - СправочникСсылка.Должности
// 
// Возвращаемое значение:
//  Структура:
//  	* Должность - СправочникСсылка.Должности
Функция СоздатьОтветУдаления(Должность)
	Результат = Новый Структура;
	Результат.Вставить("Должность", Должность.Ссылка);
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область НайтиДолжностьПоIdUseCase

// Найти должность по id.
// 
// Параметры:
//  Id - Строка
// Возвращаемое значение:
//  СправочникСсылка.Должности - ссылка на должность или NULL
Функция НайтиДолжностьПоId(Id) Экспорт
	ЗапросВБазу = Новый Запрос;
	ЗапросВБазу.Текст =
	"ВЫБРАТЬ Должности.Ссылка КАК ДолжностьСсылка
	|ИЗ Справочник.Должности КАК Должности
	|ГДЕ Должности.Код = &Id";
	ЗапросВБазу.УстановитьПараметр("Id", Id);
	РезультатЗапроса = ЗапросВБазу.Выполнить().Выбрать();
	Если Не РезультатЗапроса.Следующий() Тогда
		ДолжностьСсылка = null;
		Возврат ДолжностьСсылка;
	КонецЕсли;
	ДолжностьСсылка = РезультатЗапроса["ДолжностьСсылка"];
	Возврат ДолжностьСсылка;
КонецФункции

#КонецОбласти

#Область СозданиеДолжностиUseCase

// Создать запрос создания должности.
// 
// Параметры:
//  НазваниеДолжности - Строка
// 
// Возвращаемое значение:
//  Структура - Создать запрос создания должности:
// 		* Id - Строка
// 		* Название - Строка
Функция ЗапросСозданияДолжности(НазваниеДолжности) Экспорт
	Запрос = новый Структура;
	Guid = МодульПримитивовКлиентСервер.СгенерироватьGuid();
	Запрос.Вставить("Id", Guid);
	Запрос.Вставить("Название", НазваниеДолжности);
	возврат Запрос;
КонецФункции


// Создать должность.
// 
// Параметры:
//  ЗапросСозданияДолжности - Структура:
//  	* Id - Строка
//  	* Название - Строка
// 
// Возвращаемое значение:
//  Структура - ОтветСозданияДолжности:
//  	* Должность - СправочникОбъект.Должности
Функция СоздатьДолжность(ЗапросСозданияДолжности) Экспорт
	Должность = Справочники.Должности.СоздатьЭлемент();
	Должность.Код = ЗапросСозданияДолжности.Id;	
	Должность.Наименование = ЗапросСозданияДолжности.Название;
	ПроверитьДубликатПоИмени(Должность.Наименование);	
	Должность.Записать();	
	Возврат ОтветСозданияДолжности(Должность);	
КонецФункции

// Проверить дубликат по имени.
// 
// Параметры:
//  НазваниеДолжности - Строка
Процедура ПроверитьДубликатПоИмени(НазваниеДолжности)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|Должности.Наименование КАК СуществующаяДолжность
	|ИЗ Справочник.Должности КАК Должности
	|ГДЕ Должности.Наименование = &НовоеНазвание";
	Запрос.УстановитьПараметр("НовоеНазвание", НазваниеДолжности);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если Не РезультатЗапроса.Следующий() Тогда
		Возврат;
	КонецЕсли;
	ТекстОшибки = СтрШаблон("Должность с названием %1 уже существует.", НазваниеДолжности);
	ВызватьИсключение ТекстОшибки;
КонецПроцедуры

// Ответ создания должности.
// 
// Параметры:
//  Должность - СправочникОбъект.Должности
// 
// Возвращаемое значение:
//  Структура - Ответ создания должности:
//		* Должность - СправочникОбъект.Должности
Функция ОтветСозданияДолжности(Должность)
	DTO = новый Структура;	
	DTO.Вставить("Должность", Должность);	
	Возврат DTO;
КонецФункции

#КонецОбласти