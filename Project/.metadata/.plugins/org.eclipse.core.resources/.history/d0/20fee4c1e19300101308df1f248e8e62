// @strict-types

#Область ДобавитьТранспортВПаркUseCase


// Добавить парк в транспорт.
// 
// Параметры:
//  Запрос - Структура:
//   * Наименование - Строка
//   * ИдПарка - Строка
// 
// Возвращаемое значение:
//  Структура - Ответ добавить в парк транспорт:
//   * ТранспортСсылка - СправочникСсылка.Транспорт
Функция 	(Запрос) Экспорт
	Парк = ПолучитьПаркПоId(Запрос.ИдПарка);
	Если Парк = NULL Тогда
		Ошибка = СтрШаблон("Парк с ID %1 не найден.", Запрос.ИдПарка);
		ВызватьИсключение Ошибка;
	КонецЕсли;	
	Транспорт = МодульТранспортаВызовСервера.СоздатьОбъектТранспорта(Запрос.Наименование, Парк);		
	ОбъектПарка = Парк.ПолучитьОбъект();
	НовоеЧислоТранспорта = ОбъектПарка.КоличествоТранспорта + 1;
	НовоеЧислоСвободногоТранспорта = ОбъектПарка.КоличествоТранспортаСвободного + 1;
	ОбъектПарка.КоличествоТранспорта = НовоеЧислоТранспорта;
	ОбъектПарка.КоличествоТранспортаСвободного = НовоеЧислоСвободногоТранспорта;
	ТранспортПарка = ОбъектПарка.ТранспортПарка.Добавить();
	ТранспортПарка.Транспорт = Транспорт.Ссылка;
	Возврат ОтветДобавитьПаркВТранспорт(Транспорт, ОбъектПарка.Ссылка);
КонецФункции

// Ответ добавить парк в транспорт.
// 
// Параметры:
//  ТранспортОбъект - СправочникОбъект.Транспорт
//  ПаркОбъект - СправочникОбъект.Парки
// 
// Возвращаемое значение:
//  Структура - Ответ добавить парк в транспорт:
// * ТранспортСсылка - СправочникСсылка.Транспорт
Функция ОтветДобавитьПаркВТранспорт(ТранспортОбъект, ПаркОбъект)
	Ответ = Новый Структура;
	Ответ.Вставить("ТранспортСсылка", ТранспортОбъект.Ссылка);
	Ответ.Вставить("ПаркСсылка", ПаркОбъект.Ссылка);
	Возврат Ответ;
КонецФункции

// Получить парк по id.
// 
// Параметры:
//  ИдПарка - Строка
// 
// Возвращаемое значение:
//  СправочникСсылка.Парки - Ссылка или NULL
Функция ПолучитьПаркПоId(ИдПарка)
	Если ПустаяСтрока(ИдПарка) Тогда
		Возврат NULL;
	КонецЕсли;
	ЗапросВБазу = новый Запрос;
	ЗапросВБазу.Текст = 
	"ВЫБРАТЬ Парки.Ссылка КАК Ссылка
	|ИЗ Справочник.Парки КАК Парки
	|ГДЕ Парки.Код = &Ид";
	ЗапросВБазу.УстановитьПараметр("Ид", ИдПарка);
	РезультатЗапроса = ЗапросВБазу.Выполнить().Выбрать();
	Если Не РезультатЗапроса.Следующий() Тогда
		Возврат NULL;
	КонецЕсли;
	Возврат РезультатЗапроса.Ссылка;
КонецФункции

#КонецОбласти

#Область СоздатьПаркТранспортаUseCase

// Создать парк транспорта use case.
// 
// Параметры:
//  Запрос - Структура:
// 		* Наименование - Строка
// 		* Адрес - Строка
// Возвращаемое значение:
//  
Функция СоздатьПаркТранспорта(Запрос) Экспорт
	ПроверитьДубликатАдреса(Запрос.Адрес);
	Парк = СоздатьОбъектПаркаТранспорта(Запрос.Наименование, Запрос.Адрес);
	Возврат ОтветСозданияПаркаТранспорта(Парк);
КонецФункции

// Ответ создания парка транспорта.
// 
// Параметры:
//  Парк - СправочникОбъект.Парки
// 
// Возвращаемое значение:
//  Структура - Ответ создания парка транспорта:
// * Ссылка - СправочникСсылка.Парки 
Функция ОтветСозданияПаркаТранспорта(Парк)
	Ответ = Новый Структура;
	Ответ.Вставить("Ссылка", Парк.Ссылка);
	Возврат Ответ;	
КонецФункции

// Проверить дубликат адреса.
// 
// Параметры:
//  Адрес - Строка
// 
// Возвращаемое значение:
//  
Процедура ПроверитьДубликатАдреса(Адрес) Экспорт
	ЗапросВБазу = Новый Запрос;
	ЗапросВБазу.Текст =
	"ВЫБРАТЬ Парки.Код КАК Код
	|ИЗ Справочник.Парки КАК Парки
	|ГДЕ Парки.Адрес = &Адрес";
	ЗапросВБазу.УстановитьПараметр("Адрес", Адрес);
	РезультатЗапроса = ЗапросВБазу.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда
		Ошибка = СтрШаблон("Парк с таким адресом (%1) уже задан.", Адрес);
		ВызватьИсключение Ошибка;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область УдалитьТранспортИзПаркаUseCase

// Удалить транспорт из парка.
// 
// Параметры:
//  Запрос - Структура:
//  	* КодПарка - Строка
//  	* КодТранспорта - Строка
// 
// Возвращаемое значение:
//  Структура - Удалить транспорт из парка:
// * ПаркСсылка - СправочникСсылка.Парки
// * ТранспортСссылка - СправочникСсылка.Транспорт
Функция УдалитьТранспортИзПарка(Запрос) Экспорт
	КодПарка = Запрос.КодПарка;
	КодТранспорта = Запрос.КодТранспорта;
	ТранспортСсылка = ПолучитьТранспортПаркаПоКодуПаркаИТранспорта(КодПарка, КодТранспорта);
	Если ТранспортСсылка = NULL Тогда
		Ошибка = СтрШаблон("Не найден транспорт парка с кодом: %1", КодТранспорта);
		ВызватьИсключение Ошибка;
	КонецЕсли;
	ПаркСсылка = ПолучитьПаркПоКоду(КодПарка);
	Если ПаркСсылка = NULL Тогда
		Ошибка = СтрШаблон("Не найден парк с кодом: %1", КодПарка);
		ВызватьИсключение Ошибка;
	КонецЕсли;
	ПаркОбъект = ПаркСсылка.ПолучитьОбъект();
	ТранспортОбъект = ТранспортСсылка.ПолучитьОбъект();
	ПаркОбъект = РазрешитьУдаляемыеТранспорт(ПаркОбъект, ТранспортОбъект);
	ТранспортОбъект.Удалить();
	Возврат ОтветУдалитьТранспортИзПарка(ПаркОбъект, ТранспортОбъект);
КонецФункции

// Ответ удалить транспорт из парка.
// 
// Параметры:
//  ПаркОбъект - СправочникОбъект.Парки
//  ТранспортОбъект - СправочникОбъект.Транспорт
// 
// Возвращаемое значение:
//  Структура - ответ удалить транспорт из парка use case
// * ПаркСсылка - СправочникСсылка.Парки
// * ТранспортСссылка - СправочникСсылка.Транспорт
Функция ОтветУдалитьТранспортИзПарка(ПаркОбъект, ТранспортОбъект)
	ПаркСсылка = ПаркОбъект.Ссылка;
	ТранспортСсылка = ТранспортОбъект.Ссылка;
	Ответ = Новый Структура;
	Ответ.Вставить("ПаркСсылка", ПаркСсылка);
	Ответ.Вставить("ТранспортСссылка", ТранспортСсылка);
	Возврат Ответ;
КонецФункции

#КонецОбласти

#Область ПолучитьПаркПоКодуUseCase

// Получить парк по коду.
// 
// Параметры:
//  КодПарка - Строка
// 
// Возвращаемое значение:
//  Null, СправочникСсылка.Парки - Получить парк по коду
Функция ПолучитьПаркПоКоду(КодПарка)
	Если ПустаяСтрока(КодПарка) Тогда
		Возврат NULL;
	КонецЕсли;
	ЗапросВБазу = Новый Запрос;
	ЗапросВБазу.Текст = 
	"ВЫБРАТЬ Парки.Ссылка КАК ПаркСсылка
	|ИЗ Справочник.Парки КАК Парки
	|ГДЕ Парки.Код = &КодПарка";
	ЗапросВБазу.УстановитьПараметр("КодПарка", КодПарка);
	РезультатЗапроса = ЗапросВБазу.Выполнить().Выбрать();
	Если Не РезультатЗапроса.Следующий() Тогда
		Возврат NULL;
	КонецЕсли;
	ПаркСсылка = РезультатЗапроса.ПаркСсылка;
	Возврат ПаркСсылка;
КонецФункции

#КонецОбласти

#Область ПолучитьТранспортПаркаПоКодуПаркаИТранспортаUseCase

// Получить транспорт парка по коду парка и транспорта.
// 
// Параметры:
//  КодПарка - Строка
//  КодТранспорта - Строка
// 
// Возвращаемое значение:
//  Null, СправочникСсылка.Транспорт - Получить транспорт парка по коду парка и транспорта
Функция ПолучитьТранспортПаркаПоКодуПаркаИТранспорта(КодПарка, КодТранспорта)
	Если ПустаяСтрока(КодПарка) Тогда
		Возврат NULL;
	КонецЕсли;	
	Если ПустаяСтрока(КодТранспорта) Тогда
		Возврат NULL;
	КонецЕсли;
	ЗапросВБазу = Новый Запрос;
	ЗапросВБазу.Текст = 
	"ВЫБРАТЬ Транспорты.Ссылка КАК Транспорт
	|ИЗ Справочник.Транспорт КАК Транспорты
	|ГДЕ Транспорты.Код = &КодТранспорта";
	ЗапросВБазу.УстановитьПараметр("КодТранспорта", КодТранспорта);
	РезультатЗапроса = ЗапросВБазу.Выполнить().Выбрать();
	Если Не РезультатЗапроса.Следующий() Тогда
		Возврат NULL;
	КонецЕсли;
	ТранспортСсылка = РезультатЗапроса.Транспорт;
	Возврат ТранспортСсылка;
КонецФункции

#КонецОбласти

#Область ОбъектПаркТранспорта

// Создать объект парка транспорта.
// 
// Параметры:
//  Наименование - Строка
//  Адрес - Строка
// 
// Возвращаемое значение:
//  СправочникОбъект.Парки
Функция СоздатьОбъектПаркаТранспорта(Наименование, Адрес)
	Парк = Справочники.Парки.СоздатьЭлемент();
	Парк.Код = МодульПримитивовКлиентСервер.СгенерироватьGuid();
	Парк.Наименование = Наименование;
	Парк.Адрес = Адрес;
	Парк.КоличествоТранспорта = 0;
	Парк.КоличествоТранспортаЗанятного = 0;
	Парк.КоличествоТранспортаСвободного = 0;
	Парк.Записать();	
	Возврат Парк;
КонецФункции

// Разрешить удаляемые транспорт.
// 
// Параметры:
//  ПаркОбъект - СправочникОбъект.Парки
//  ТранспортОбъект - СправочникОбъект.Транспорт
// 
// Возвращаемое значение:
//  СправочникОбъект.Парки
Функция РазрешитьУдаляемыеТранспорт(ПаркОбъект, ТранспортОбъект)
	Если Не ТранспортОбъект.Статус = Перечисления.СтатусыТранспорта.Занят Тогда
		ПаркОбъект.КоличествоТранспортаЗанятного = ПаркОбъект.КоличествоТранспортаЗанятного - 1;
	Иначе
		ПаркОбъект.КоличествоТранспортаСвободного = ПаркОбъект.КоличествоТранспортаСвободного - 1;
	КонецЕсли;
	ПаркОбъект.КоличествоТранспорта = ПаркОбъект.КоличествоТранспорта - 1;
	Возврат ПаркОбъект;
КонецФункции

#КонецОбласти