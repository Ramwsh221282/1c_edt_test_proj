// @strict-types

#Область СоздатьСотрудникаUseCase

// Принять сотрудника на работу.
// 
// Параметры:
//  Запрос - Структура:
//   * ИдПриемаНаРаботу - Строка
// 
// Возвращаемое значение:
//  Структура:
//   * Сотрудник - СправочникСсылка.Сотрудники
Функция ПринятьСотрудникаНаРаботу(Запрос) Экспорт
	ПриемНаРаботу = МодульПриемНаРаботуВызовСервера.ПолучитьИнформациюОПриеме(Запрос.ИдПриемаНаРаботу);
	Если Не ЗначениеЗаполнено(ПриемНаРаботу) Тогда
		Ошибка = СтрШаблон("Невозможно принять сотрудника на работу. Возможно документ о приеме не создан.");
		ВызватьИсключение Ошибка;		
	КонецЕсли;
	Сотрудник = СоздатьОбъектСотрудника(
		ПриемНаРаботу.ФизЛицо, 
		ПриемНаРаботу.Должность, 
		ПриемНаРаботу.Документ
	);	
	Возврат ОтветПриемаСотрудникаНаРаботу(Сотрудник);
КонецФункции

// Ответ приема сотрудника на работу.
// 
// Параметры:
//  Сотрудник - СправочникОбъект.Сотрудники
// 
// Возвращаемое значение:
//  Структура:
//   * Сотрудник - СправочникСсылка.Сотрудники
Функция ОтветПриемаСотрудникаНаРаботу(Сотрудник)
	Ответ = новый Структура;
	Ответ.Вставить("Сотрудник", Сотрудник.Ссылка);
	Возврат Ответ;	
КонецФункции

#КонецОбласти

#Область УволитьСотрудникаUseCase

// Уволить сотрудника.
// 
// Параметры:
//  СсылкаДокумента - ДокументСсылка.ПриемНаРаботу
// 
// Возвращаемое значение:
//  СправочникСсылка.Сотрудники, null - удаленный сотрудник или NULL если сотрудник не найден. Документ в любом порядке удаляется.
Функция УволитьСотрудника(СсылкаДокумента) Экспорт
	Сотрудник = ПолучитьСотрудникаПоДокументу(СсылкаДокумента);
	Если Сотрудник = NULL Тогда				
		Возврат NULl;
	КонецЕсли;
	Сотрудник.ПолучитьОбъект().Удалить();
	Возврат Сотрудник;
КонецФункции

// Получить сотрудника по документу.
// 
// Параметры:
//  СсылкаДокумента - ДокументСсылка.ПриемНаРаботу
// 
// Возвращаемое значение:
//  СправочникСсылка.Сотрудники, null - сотрудник
Функция ПолучитьСотрудникаПоДокументу(СсылкаДокумента)
	ЗапросВБазу = Новый Запрос;
	ЗапросВБазу.Текст = 
	"ВЫБРАТЬ Сотрудники.Ссылка КАК Сотрудник
	|ИЗ Справочник.Сотрудники КАК Сотрудники
	|ГДЕ Сотрудники.ПриемНаРаботу.Ссылка = &Ссылка";
	ЗапросВБазу.УстановитьПараметр("Ссылка", СсылкаДокумента);
	РезультатЗапроса = ЗапросВБазу.Выполнить().Выбрать();	
	Если Не РезультатЗапроса.Следующий() Тогда
		Возврат NULL
	КонецЕсли;	
	Возврат РезультатЗапроса.Сотрудник;
КонецФункции

#КонецОбласти

#Область ОбъектСотрудник

// Создать объект сотрудника.
// 
// Параметры:
//  ФизЛицо - СправочникСсылка.ФизическиеЛица
//  Должность - СправочникСсылка.Должности
//  ДокументПриема - ДокументСсылка.ПриемНаРаботу
// 
// Возвращаемое значение:
//  СправочникОбъект.Сотрудники
Функция СоздатьОбъектСотрудника(ФизЛицо, Должность, ДокументПриема)
	Сотрудник = Справочники.Сотрудники.СоздатьЭлемент();
	Сотрудник.Код = МодульПримитивовКлиентСервер.СгенерироватьGuid();
	Сотрудник.Наименование = ФизЛицо.Наименование;
	Сотрудник.ПриемНаРаботу = ДокументПриема;
	Сотрудник.ФизическоеЛицо = ФизЛицо;
	Сотрудник.Должность = Должность;
	Сотрудник.Записать();
	Возврат Сотрудник;
КонецФункции

#КонецОбласти
