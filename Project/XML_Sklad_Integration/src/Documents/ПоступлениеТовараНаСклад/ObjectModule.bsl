
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)	
	МассивОшибок = Новый Массив;
	МассивОшибок = ДобавитьВМассивОшибкуЕслиЕсть(МассивОшибок, ПроверитьЗаполнениеСклада());
	МассивОшибок = ДобавитьВМассивОшибкуЕслиЕсть(МассивОшибок, ПроверитьЗаполнениеСуммыДокумента());
	МассивОшибок = ДобавитьВМассивОшибкуЕслиЕсть(МассивОшибок, ПроверитьНаличиеТоваров());
	МассивОшибок = ДобавитьВМассивОшибкуЕслиЕсть(МассивОшибок, ПроверитьСуммуВсехТоваров());
	Если СодержитОшибки(МассивОшибок) Тогда
		Отказ = Истина;
		ТекстОшибки = СгенерироватьСтрокуОшибокИзСтроки(МассивОшибок);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	СгенерироватьGuid();
КонецПроцедуры

Процедура СгенерироватьGuid()
	Номер = МодульПримитивовКлиентСервер.СгенерироватьGuid();
КонецПроцедуры

// Проверить заполнение склада.
// 
// Возвращаемое значение:
//  Строка - Строка
Функция ПроверитьЗаполнениеСклада()	
	Если Склад = Справочники.Склады.ПустаяСсылка() Тогда
		Возврат "Склад документа не определен. Его нужно определить.";		
	КонецЕсли;	
	Возврат "";
КонецФункции

// Проверить заполнение суммы документа.
// 
// Возвращаемое значение:
//  Строка - Строка
Функция ПроверитьЗаполнениеСуммыДокумента()
	Если СуммаДокумента <= 0 Тогда
		Возврат "Сумма документа должна быть рассчитана";
	КонецЕсли;
	Возврат "";
КонецФункции

Функция ПроверитьСуммуВсехТоваров()
	Для Каждого Товар Из Товары Цикл
		СуммаТовара = Товар.СуммаТовара;
		Если СуммаТовара <= 0 Тогда
			ТоварОбъект = Товар.Товар.ПолучитьОбъект();
			Текст = "У товара %1 не расчитана цена.";	
			Шаблон = СтрШаблон(Текст, ТоварОбъект);
			Возврат Шаблон;		
		КонецЕсли;
	КонецЦикла;
	Возврат "";
КонецФункции

// Проверить наличие товаров.
// 
// Возвращаемое значение:
//  Строка - Строка
Функция ПроверитьНаличиеТоваров()
	Если Товары.Количество() <= 0 Тогда
		Возврат "В документе должна быть информация о товаре";
	КонецЕсли;
	Возврат "";
КонецФункции

// Добавить в массив ошибку если есть.
// 
// Параметры:
//  Массив - Массив из Строка
//  СтрокаОшибки - Строка
// 
// Возвращаемое значение:
//  Массив - Массив из Строка
Функция ДобавитьВМассивОшибкуЕслиЕсть(Массив, СтрокаОшибки)
	Если Не ПустаяСтрока(СтрокаОшибки) Тогда
		Массив.Добавить(СтрокаОшибки)		
	КонецЕсли;
	Возврат Массив;
КонецФункции

// Содержит ошибки.
// 
// Параметры:
//  МассивОшибок - Массив из Строка
// 
// Возвращаемое значение:
//  Булево
Функция СодержитОшибки(МассивОшибок)
	Возврат МассивОшибок.Количество() > 0;
КонецФункции

// Сгенерировать строку ошибок из строки.
// 
// Параметры:
//  МассивОшибок - Массив из Строка
// 
// Возвращаемое значение:
//  Строка
Функция СгенерироватьСтрокуОшибокИзСтроки(МассивОшибок)
	СтрокаОшибки = "Список ошибок:" + Символы.ПС;	
	Для Каждого Строка Из МассивОшибок Цикл		
		СтрокаОшибки = СтрокаОшибки + Строка + Символы.ПС;;
	КонецЦикла;
	Возврат СтрокаОшибки;
КонецФункции