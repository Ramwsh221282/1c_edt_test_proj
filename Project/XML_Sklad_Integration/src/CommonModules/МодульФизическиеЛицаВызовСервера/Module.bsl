// @strict-types

#Область УдалениеФизическогоЛицаUseCase

// Создать запрос удаление физического лица.
// 
// Параметры:
//  Id - Строка
// 
// Возвращаемое значение:
//  Структура - Создать запрос удаление физического лица:
// * Id - Строка
Функция СоздатьЗапросУдалениеФизическогоЛица(Id) Экспорт
	Запрос = новый Структура;
	Запрос.Вставить("Id", Id);
	Возврат Запрос;
КонецФункции

// Удалить физическое лицо.
// 
// Параметры:
//  Запрос - Структура:
//   * Id - Строка
// 
// Возвращаемое значение:
//  Структура - Удалить физическое лицо:
// * ФизическоеЛицо - СправочникСсылка.ФизическиеЛица 
Функция УдалитьФизическоеЛицо(Запрос) Экспорт	
	Лицо = НайтиФизическоеЛицоПоId(Запрос.Id);
	Лицо.ПолучитьОбъект().Удалить();
	Возврат СоздатьОтветУдалениеФизическогоЛица(Лицо);
КонецФункции

// Создать ответ удаление физического лица.
// 
// Параметры:
//  Лицо - СправочникСсылка.ФизическиеЛица, Null - Лицо
// 
// Возвращаемое значение:
//  Структура - Создать ответ удаление физического лица:
// * ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
Функция СоздатьОтветУдалениеФизическогоЛица(Лицо)
	Ответ = новый Структура;
	Ответ.Вставить("ФизическоеЛицо", Лицо);
	Возврат Ответ;
КонецФункции

#КонецОбласти

#Область НайтиФизическоеЛицоПоIdUseCase

// Найти физическое лицо по id.
// 
// Параметры:
//  Id - Строка
// 
// Возвращаемое значение:
//  СправочникСсылка.ФизическиеЛица
Функция НайтиФизическоеЛицоПоId(Id) Экспорт
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ФизическиеЛица.Ссылка КАК Ссылка
	|ИЗ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ ФизическиеЛица.Код = &Id";
	Запрос.УстановитьПараметр("Id", Id);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если Не РезультатЗапроса.Следующий() Тогда
		Возврат NULL;
	КонецЕсли;
	Возврат РезультатЗапроса.Ссылка;
КонецФункции

#КонецОбласти

#Область СозданиеФизическогоЛицаUseCase

// Запрос создание физического лица.
// 
// Параметры:
//  ФИО - Строка
//  НомерТелефона - Строка
// 
// Возвращаемое значение:
//  Структура - Запрос создание физического лица:
// * ФИО - Строка
// * НомерТелефона - Строка 
Функция ЗапросСозданиеФизическогоЛица(ФИО, НомерТелефона) Экспорт
	Запрос = новый Структура;
	Запрос.Вставить("ФИО", ФИО);
	Запрос.Вставить("НомерТелефона", НомерТелефона);
	Возврат Запрос;
КонецФункции

// Создать физическое лицо.
// 
// Параметры:
//  Запрос - Структура:
//  	* ФИО - Строка
//  	* НомерТелефона - Строка
// 
// Возвращаемое значение:
//  Структура - Создать физическое лицо:
// * ФизическоеЛицо - СправочникОбъект.ФизическиеЛица 
Функция СоздатьФизическоеЛицо(Запрос) Экспорт	
	ПроверитьУникальностьНомераТелефона(Запрос.НомерТелефона);
	Лицо = Справочники.ФизическиеЛица.СоздатьЭлемент();
	Лицо.Код = МодульПримитивовКлиентСервер.СгенерироватьGuid();
	Лицо.Наименование = Запрос.ФИО;
	Лицо.НомерТелефона = Запрос.НомерТелефона;
	Лицо.Записать();
	Возврат ОтветСоздатьФизическоеЛицо(Лицо);
КонецФункции

// Ответ создать физическое лицо.
// 
// Параметры:
//  Лицо - СправочникОбъект.ФизическиеЛица
// 
// Возвращаемое значение:
//  Структура - Ответ создать физическое лицо:
// 	* ФизическоеЛицо - СправочникОбъект.ФизическиеЛица
Функция ОтветСоздатьФизическоеЛицо(Лицо)
	Ответ = новый Структура;
	Ответ.Вставить("ФизическоеЛицо", Лицо);
	Возврат Ответ;
КонецФункции

// Проверить уникальность номера телефона.
// 
// Параметры:
//  НомерТелефона - Строка
Процедура ПроверитьУникальностьНомераТелефона(НомерТелефона)
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|ФизическиеЛица.НомерТелефона
	|ИЗ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ ФизическиеЛица.НомерТелефона = &Номер";
	Запрос.УстановитьПараметр("Номер", НомерТелефона);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если Не РезультатЗапроса.Следующий() Тогда
		Возврат;
	КонецЕсли;
	ТекстОшибки = СтрШаблон("Номер телефона %1 не уникален.", НомерТелефона);
	ВызватьИсключение ТекстОшибки;
КонецПроцедуры

#КонецОбласти