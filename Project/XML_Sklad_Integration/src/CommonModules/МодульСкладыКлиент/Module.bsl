// @strict-types

#Область СоздатьДокументПоступленияТовараНаСкладUseCase

// Запрос создать документ проведения поступления товара на склад.
// 
// Параметры:
//  СсылкаДокумента - ДокументСсылка.ПоступлениеТовараНаСклад
//  СкладСсылка - СправочникСсылка.Склады
//  КоллекцияТоваров - Массив Из ДанныеФормыКоллекция:
//  * Товар - СправочникСсылка.Товар
//  * ЕдиницаИзмерения - СправочникСсылка.ЕдиницыИзмерения
//  * КоличествоТовара - Число
//  * ЦенаПокупки - Число
//  * ЦенаПродажи - Число
//  * Спред - Число
// 
// Возвращаемое значение:
//  Структура - Запрос Создать Документ Проведения Поступления Товара Склад:
//  * ДокументСсылка - ДокументСсылка.ПоступлениеТовараНаСклад
//  * СкладСсылка - СправочникСсылка.Склады
//  * МассивТоваров - Массив Из Структура:
//  ** ТоварСсылка - СправочникСсылка.Товар
//  ** ЕдиницаИзмеренияСсылка - СправочникСсылка.ЕдиницыИзмерения
//  ** КоличествоТовара - Число
//  ** ЦенаПокупки - Число
//  ** ЦенаПродажи - Число
//  ** Спред - Число
Функция ЗапросСоздатьДокументПроведенияПоступленияТовараНаСклад(СсылкаДокумента, СкладСсылка, КоллекцияТоваров)
	Запрос = Новый Структура;
	Запрос.Вставить("ДокументСсылка", СсылкаДокумента);
	Запрос.Вставить("СкладСсылка", СкладСсылка);	
	МассивТоваров = Новый Массив; // Массив Из Структура
	Для Каждого Товар Из КоллекцияТоваров Цикл
		СтруктураТовара = Новый Структура;		
		СтруктураТовара.Вставить("ТоварСсылка", Товар.Товар);
		СтруктураТовара.Вставить("ЕденицаИзмеренияСсылка", Товар.ЕдиницаИзмерения);
		СтруктураТовара.Вставить("КоличествоТовара", Товар.КоличествоТовара);
		СтруктураТовара.Вставить("ЦенаПокупки", Товар.ЦенаПокупки);
		СтруктураТовара.Вставить("ЦенаПродажи", Товар.ЦенаПродажи);
		СтруктураТовара.Вставить("Спред", Товар.Спред);
		МассивТоваров.Добавить(СтруктураТовара);
	КонецЦикла;
	Запрос.Вставить("МассивТоваров", МассивТоваров);
	Возврат Запрос;
КонецФункции

#КонецОбласти

#Область УдалитьТоварСкладаUseCase

// Удалить товар со склада клиент.
// 
// Параметры:
//  СсылкаСклад - СправочникСсылка.Склады
//  СсылкаТовараСклада - СправочникСсылка.Товар
// 
// Возвращаемое значение:
//  Структура - Удалить товар со склада клиент:
// * СкладСсылка - СправочникСсылка.Склады 
Функция УдалитьТоварСоСкладаКлиент(СсылкаСклад, СсылкаТовараСклада) Экспорт
	Запрос = ЗапросУдалитьТоварСклада(СсылкаСклад, СсылкаТовараСклада);
	Ответ = МодульСкладыВызовСервера.УдалитьТоварСоСклада(Запрос);
	Возврат Ответ;
КонецФункции

// Запрос удалить товар склада.
// 
// Параметры:
//  СсылкаСклад - СправочникСсылка.Склады
//  СсылкаТовараСклада - СправочникСсылка.Товар
// 
// Возвращаемое значение:
//  Структура - Запрос удалить товар склада:
// * СсылкаТовараСклада - СправочникСсылка.Товар 
// * СсылкаСклад - СправочникСсылка.Склады
Функция ЗапросУдалитьТоварСклада(СсылкаСклад, СсылкаТовараСклада)
	Запрос = Новый Структура;
	Запрос.Вставить("СсылкаТовараСклада", СсылкаТовараСклада);
	Запрос.Вставить("СсылкаСклад", СсылкаСклад);
	Возврат Запрос;
КонецФункции

#КонецОбласти

#Область СоздатьПустойСкладUseCase

// Создать пустой склад клиент.
// 
// Параметры:
//  НаименованиеСклада - Строка
//  АдресСклада - Строка
// 
// Возвращаемое значение:
//  Структура - Создать пустой склад клиент:
// * СкладСсылка - СправочникСсылка.Склады - 
Функция СоздатьПустойСкладКлиент(НаименованиеСклада, АдресСклада) Экспорт
	Запрос = ЗапросСоздатьПустойСклад(НаименованиеСклада, АдресСклада);
	Ответ = МодульСкладыВызовСервера.СоздатьПустойСкладСервер(Запрос);
	Возврат Ответ;
КонецФункции

// Запрос создать пустой склад.
// 
// Параметры:
//  НаименованиеСклада - Строка
//  АдресСклада - Строка
// 
// Возвращаемое значение:
//  Структура - Запрос создать пустой склад:
// * НаименованиеСклада - Строка
// * АдресСклада - Строка
Функция ЗапросСоздатьПустойСклад(НаименованиеСклада, АдресСклада)
	Запрос = Новый Структура;
	Запрос.Вставить("НаименованиеСклада", НаименованиеСклада);
	Запрос.Вставить("АдресСклада", АдресСклада);
	Возврат Запрос;
КонецФункции

#КонецОбласти

#Область СохранитьТоварыСкладаUseCase

// Сохранить Товары Склада Клиент.
// 
// Параметры:
//  СсылкаСклада - СправочникСсылка.Склады
//  СписокТоваров - ДанныеФормыКоллекция
// Возвращаемое значение:
//  Структура - Ответ сохранить товары склада:
// * СкладСсылка - СправочникСсылка.Склады
Функция СохранитьТоварыСкладаКлиент(СсылкаСклада, СписокТоваров) Экспорт
	Запрос = ЗапросСоздатьСохранитьТоварыСклада(СсылкаСклада, СписокТоваров);
	Ответ = МодульСкладыВызовСервера.СохранитьТоварыСклада(Запрос);
	Возврат Ответ;
КонецФункции

// Запрос создать сохранить товары склада.
// 
// Параметры:
//  СсылкаСклада - СправочникСсылка.Склады
//  СписокТоваров - ДанныеФормыКоллекция
// 
// Возвращаемое значение:
//  Структура:
//  * СсылкаСклада - СправочникСсылка.Склады
//  * СписокТоваров - Массив из Структура:
//  ** СсылкаТовара - СправочникСсылка.Товар
//  ** ЕдиницаИзмерения - СправочникСсылка.ЕдиницыИзмерения
//  ** ЦенаПокупки - Число
//  ** ЦенаПродажи - Число
//  ** Спред - Число
//  ** Количество - Число
Функция ЗапросСоздатьСохранитьТоварыСклада(СсылкаСклада, СписокТоваров)
	Запрос = Новый Структура;
	МассивТоваров = Новый Массив;
	Для Каждого СтрокаТовара Из СписокТоваров Цикл
		ТоварСтруктура = Новый Структура;
		ТоварСтруктура.Вставить("СсылкаТовара", СтрокаТовара.Товар);		
		ТоварСтруктура.Вставить("ЕдиницаИзмерения", СтрокаТовара.ЕдиницаИзмерения);
		ТоварСтруктура.Вставить("ЦенаПокупки", СтрокаТовара.ЦенаПокупки);
		ТоварСтруктура.Вставить("ЦенаПродажи", СтрокаТовара.ЦенаПродажи);
		ТоварСтруктура.Вставить("Спред", СтрокаТовара.Спред);
		ТоварСтруктура.Вставить("Количество", СтрокаТовара.Количество);
		МассивТоваров.Добавить(ТоварСтруктура);		
	КонецЦикла;	
	Запрос.Вставить("СсылкаСклада", СсылкаСклада);
	Запрос.Вставить("СписокТоваров", МассивТоваров);	
	Возврат Запрос;	
Конецфункции

#КонецОбласти